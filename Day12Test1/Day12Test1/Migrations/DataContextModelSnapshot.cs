// <auto-generated />
using System;
using Day12Test1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day12Test1.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Day12Test1.Models.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("KmRace")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RaceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RaceDestination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxiId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RaceId");

                    b.HasIndex("TaxiId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Day12Test1.Models.Taxi", b =>
                {
                    b.Property<int>("TaxiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBusy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxiName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TaxiId");

                    b.ToTable("Taxi");
                });

            modelBuilder.Entity("Day12Test1.Models.Race", b =>
                {
                    b.HasOne("Day12Test1.Models.Taxi", "Racer")
                        .WithMany("Races")
                        .HasForeignKey("TaxiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racer");
                });

            modelBuilder.Entity("Day12Test1.Models.Taxi", b =>
                {
                    b.Navigation("Races");
                });
#pragma warning restore 612, 618
        }
    }
}
